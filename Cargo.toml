[package]
name = "rust-watcher"
version = "0.1.0"
edition = "2021"

[dependencies]
notify = "6.1"
tokio = { version = "1.0", features = ["rt-multi-thread", "macros", "sync", "fs", "time", "signal"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
clap = { version = "4.0", features = ["derive"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
tracing = "0.1"
tracing-subscriber = "0.3"
anyhow = "1.0"
thiserror = "1.0"
twox-hash = "1.6"  # Fast non-cryptographic hash for content matching
log = "0.4.27"
env_logger = "0.11.8"

[target.'cfg(unix)'.dependencies]
nix = "0.28"  # For inode information on Unix-like systems

[dev-dependencies]
tempfile = "3.0"
tokio-test = "0.4"
criterion = "0.5"
serial_test = "3.0"
once_cell = "1.19" # For safe static initialization in tests

# Memory optimization profiles to prevent OOM crashes
[profile.test]
opt-level = 1        # Slight optimization to reduce memory usage
debug = 1           # Reduced debug info to save memory
incremental = false # Disable incremental compilation to reduce memory
codegen-units = 2   # Limited codegen units to balance speed vs memory

[profile.dev]
opt-level = 0
debug = 1           # Reduced debug symbols
incremental = false # Disable to prevent memory issues
split-debuginfo = "off"  # Disable debug info splitting on Windows

# Separate test profiles for different types of tests
[[bin]]
name = "watcher"
path = "src/main.rs"

[[example]]
name = "advanced_monitor"
path = "examples/advanced_monitor.rs"

# Remove problematic test targets - use standard Rust test conventions instead
# Unit tests will be in src/ files with #[cfg(test)]
# Integration tests will be in tests/ directory
