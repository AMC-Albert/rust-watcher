[package]
name = "rust-watcher"
version = "0.1.0"
edition = "2021"

[dependencies]
notify = "6.1"
tokio = { version = "1.0", features = [
  "rt-multi-thread",
  "macros",
  "sync",
  "fs",
  "time",
  "signal",
] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
clap = { version = "4.0", features = ["derive"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
tracing = "0.1"
tracing-subscriber = "0.3"
anyhow = "1.0"
thiserror = "1.0"
twox-hash = "1.6" # Fast non-cryptographic hash for content matching
log = "0.4.27"
env_logger = "0.11.8"
redb = "2.1" # Embedded database for large-scale event storage
async-trait = "0.1" # Async trait support
bincode = "1.3" # Binary serialization for database records
walkdir = "2.0" # For filesystem tree traversal during cache initialization
globset = "0.4.16"
tempfile = "3.0"
pollster = "0.3"

[target.'cfg(unix)'.dependencies]
nix = "0.28" # For inode information on Unix-like systems

[dev-dependencies]
tempfile = "3.0"
tokio-test = "0.4"
criterion = "0.5"
serial_test = "3.0"
once_cell = "1.19"  # For safe static initialization in tests
futures = "0.3" # For block_on support in tests of async code

# Standard Rust profiles
[profile.dev]
debug = true
incremental = true

[profile.test]
debug = true
opt-level = 1

# Binary and example targets
[[bin]]
name = "watcher"
path = "src/main.rs"

[[bin]]
name = "fs_cache_bench"
path = "bin/fs_cache_bench.rs"

# [[example]]
# name = "advanced_monitor"
# path = "examples/advanced_monitor.rs"

# Integration tests are in tests/ directory following Rust conventions
